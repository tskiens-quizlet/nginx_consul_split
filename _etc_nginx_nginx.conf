# Here we declare the Nginx ida of an upstream
# one upstream for each endpoint IP address or pool of nodes we're sending to.

upstream web_endpoint_1 {
	server 10.10.10.1:80 max_fails=100 fail_timeout=15s;
	keepalive 16;
}
upstream web_endpoint_2 {
	server 10.10.10.2:80 max_fails=100 fail_timeout=15s;
	keepalive 16;
}




########## Consul-Template QLB Traffic split
# Splitting on $request_id so the cluster
# is determined anew for every request, i.e.
# sessions are NOT sticky to one cluster type
# http://nginx.org/en/docs/http/ngx_http_core_module.html#var_request_id
# (Mapping percentages to strings because `split_clients` doesn't support variables)
# We load the desired percentage of VM traffic from Consul,
# with the remainder being sent to Kubernetes.
# NB: Must use snake_case because our Puppet Consul is very old
# https://github.com/hashicorp/consul-template/blob/6dc5d0f9c4cbc62828c91a923482c2341d36acb3/README.md
#
# The "*" default MUST BE THE LAST ENTRY!!!!!!!
# DO NOT MOVE

split_clients $request_id $web_cluster_type {
	{{ with $vm_traffic_percentage := key_or_default "app_config/nginx_config/nginx.conf/vm_traffic_percentage" "100" | parseFloat }}
	{{ if gt $vm_traffic_percentage 0.0 }}
	{{ $vm_traffic_percentage }}% "alternate";
	{{ end }}
	{{ end }}
	* "default";
}




######### This set of maps uses the consul split above
# when consul values are > 0 the split containts 2 entries
# default is the always available, used in normal operation IP address
# defined in hiera and ingested at the top of this file as traffic_split_endpoint_default
#
# alternate is only active when consul key value is > 0
# alternate is the new, or secondary or Null endpoint when traffic is being moved
# also set in hieradata and ingested at top as traffic_split_endpoint_alternate

map $web_cluster_type $web_upstream {
	default web_endpoint_1;
	alternate $web_endpoint_2;
}
